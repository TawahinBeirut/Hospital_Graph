/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/AWTForms/Dialog.java to edit this template
 */
package sae.Vue;

import java.awt.Dimension;
import java.awt.Toolkit;
import sae.Model.FoncEnum;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.ListSelectionModel;

/**
 * Fenetre modale pour choisir une fonction
 * @author gheri
 */
public class ChooseFoncDialog extends java.awt.Dialog {

    
    // <editor-fold defaultstate="collapsed" desc="ATTRIBUTS">
    
    /**
     * Attribut correspondant à une liste de fonctions ( FoncEnum) qui va etre affichée
     */
    List<FoncEnum> fonctions;
    
    /**
     * Attribut corrsepondant à un model de DefaultList pour la JTable
     */
    DefaultListModel defaultListModel = new DefaultListModel();
    
    /**
     * Attribut correspondant à la reponse envoyée par la JDialog
     */
    FoncEnum response;
    //</editor-fold>
    
    // <editor-fold defaultstate="collapsed" desc="CONSTRUCTEUR">
    /**
     * Constructeur de la fenetre
     * @param parent
     * @param modal
     * @param newFonctions Liste de FoncEnum 
     */
    public ChooseFoncDialog(java.awt.Frame parent, boolean modal,List<FoncEnum> newFonctions) {
        super(parent, modal);
        initComponents();
        tailleWindow();
        this.setTitle("Choix Fonction");
        this.fonctions = newFonctions;
        
        // Initialisation des données
        bindData();
        
        // Listeners pour les boutons
        /**
         * Listener en classe Anonyme du bouton Chercher qui appelle la fonction search()
         */
        searchButton.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                search(searchBar.getText());
            }
        });
        
        /**
         * Listener en classe Anonyme de la JTable qui permet de selectionner une fonction et renvoyer une reponse
         */
        myJTable.addMouseListener(new MouseListener(){
            @Override
            public void mouseClicked(MouseEvent e) {}

            @Override
            public void mousePressed(MouseEvent e) {}

            @Override
            public void mouseReleased(MouseEvent e) {
                
                // On cherche la fonction selectionnée
                for (FoncEnum tmp : fonctions){
                    if (tmp.toString().equals(myJTable.getSelectedValue())){
                        response = tmp;
                    }
                }
                dispose();
            }

            @Override
            public void mouseEntered(MouseEvent e) {}

            @Override
            public void mouseExited(MouseEvent e) {}
        });
        
    }
    //</editor-fold>
    
    // <editor-fold defaultstate="collapsed" desc="PRIVATE METHODES">
    
    /**
     * Liaison avec la JList 
     */
    private void bindData(){
        for (FoncEnum tmp : fonctions){
            defaultListModel.addElement(tmp.toString());
        }
        
        myJTable.setModel(defaultListModel);
        myJTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
    }
    
    
    /**
     * Methode pour chercher dans les fonctions la valeur renseignée dans la barre de recherche
     * @param motRech 
     */
    private void search(String motRech){
        DefaultListModel itemsFiltres = new DefaultListModel();
        
        for (FoncEnum tmp : fonctions){
            String tmpName = tmp.toString().toLowerCase();
            if (tmpName.contains(motRech.toLowerCase())){
                itemsFiltres.addElement(tmp.toString());
            }
        }
        defaultListModel = itemsFiltres;
        myJTable.setModel(itemsFiltres);
    }
    
    /**
     * Methode pour dimensioner et positionner la fenetre
     */
    private void tailleWindow() {
        Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (int) ((dimension.getWidth() - getWidth()) / 2);
        int y = (int) ((dimension.getHeight() - getHeight()) / 2);

        setLocation(x, y);
    }
    //</editor-fold>
    
    /**
     * Methode publique ShowDialog
     * @return 
     */
    public FoncEnum ShowDialog(){
        this.setVisible(true);
        return response;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        searchBar = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        myJTable = new javax.swing.JList<>();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Choisissez votre Fonction");

        searchButton.setBackground(new java.awt.Color(0, 153, 204));
        searchButton.setText("Search");

        myJTable.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(myJTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(82, 82, 82))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(searchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchButton)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> myJTable;
    private javax.swing.JTextField searchBar;
    private javax.swing.JButton searchButton;
    // End of variables declaration//GEN-END:variables
}
