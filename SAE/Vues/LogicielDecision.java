/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sae.Vue;

import sae.Vue.GraphScreen;
import sae.Vue.FileDialog;
import sae.Logiciel;
import sae.Model.Noeud;
import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import sae.Vue.MenuForm;
import sae.Controller.Generation;
import sae.Model.FoncEnum;
import sae.Model.Graphe.Sommet;

/**
 * Fenetre Principale 
 * @author gheri
 */
public class LogicielDecision extends javax.swing.JFrame{
    
   // <editor-fold defaultstate="collapsed" desc="ATTRIBUTS">
    /**
     * Attribut correspondant au logiciel avec lequel la fenetre communique
     */
    Logiciel l;
    
    /**
     * Attribut correspondant au Panel qui affiche le graphe
     */
    GraphScreen graphScreen;
    
    /**
     * Attribut correspondant au Panel de base qui affiche la premiere version du graphe
     */
    GraphScreen oldScreen;
    
    /**
     * Attribut correspondant au Panel pour afficher les boutons de recherche de sommets et fonctions
     */
    MenuForm    menu;
    
    /**
     * Attribut correspondant au JTextArea qui affiche des informations sur un sommet ou le resultat d'une fonction
     */
    JTextArea   console;
    // </editor-fold>
    
   // <editor-fold defaultstate="collapsed" desc="CONSTRUCTEUR">
    
    /**
     * 
     * @param l
     * @throws IOException 
     */
    public LogicielDecision(Logiciel l) throws IOException {
        
        // Initialisation de la Fenetre
        initComponents(); this.l = l;
        MenuForm test = new MenuForm(l,actionPanel.getWidth(),actionPanel.getHeight());
        menu = test;
        console = outputTextArea;
        actionPanel.add(menu,BorderLayout.CENTER);
        // Generation du Graphe
        
        newMenuItem.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                
                // On appele la file dialog pour ouvrir et generer le graphe depuis les fichiers source
                FileDialog dialog = new FileDialog(null,true);
                dialog.setLocationRelativeTo(rootPane);
                String[] result = dialog.showDialog();
                
                if (result != null && result[0] != null && result[1] != null){
                    
                    l.genererGraphe(result[0],result[1]);
                    
                }
            }
        });
        
        quitMenuItem.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                System.exit(-1);
           }
        });
       oldScreenMenuItem.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                if (graphScreen!= null){
                    if (!graphScreen.equals(oldScreen)){
                        affichagePanel.remove(graphScreen);
                        graphScreen = oldScreen;
                        affichagePanel.add(graphScreen);
                        revalidate();
                        repaint();
                    }
                }
            }
        });
       
    }
    // </editor-fold>
    
    public GraphScreen getGraphScreen() {
        return graphScreen;
    }

    public MenuForm getMenu() {
        return menu;
    }

    public JPanel getConsolePanel() {
        return ConsolePanel;
    }

    public JPanel getActionPanel() {
        return actionPanel;
    }

    public JPanel getAffichagePanel() {
        return affichagePanel;
    }

    public JTextArea getConsole() {
        return console;
    }

    public void setGraphScreen(GraphScreen graphScreen) {
        this.graphScreen = graphScreen;
    }

    public void setL(Logiciel l) {
        this.l = l;
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        affichagePanel = new javax.swing.JPanel();
        ConsolePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        outputTextArea = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        actionPanel = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        newMenuItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        quitMenuItem = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        oldScreenMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Aide à la décision");
        setSize(new java.awt.Dimension(500, 400));
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });

        affichagePanel.setBackground(new java.awt.Color(255, 255, 255));
        affichagePanel.setLayout(new java.awt.CardLayout());

        outputTextArea.setColumns(20);
        outputTextArea.setRows(5);
        outputTextArea.setWrapStyleWord(true);
        outputTextArea.setLineWrap(true);
        jScrollPane1.setViewportView(outputTextArea);

        jLabel1.setText("Console");

        javax.swing.GroupLayout ConsolePanelLayout = new javax.swing.GroupLayout(ConsolePanel);
        ConsolePanel.setLayout(ConsolePanelLayout);
        ConsolePanelLayout.setHorizontalGroup(
            ConsolePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConsolePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ConsolePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ConsolePanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        ConsolePanelLayout.setVerticalGroup(
            ConsolePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ConsolePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jMenu1.setText("Fichier");

        newMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        newMenuItem.setText("Ouvrir...");
        newMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(newMenuItem);
        jMenu1.add(jSeparator1);

        jMenuItem1.setText("Enregistrer");
        jMenuItem1.setEnabled(false);
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenu3.setText("Enregistrer sous ...");
        jMenu3.setEnabled(false);
        jMenu1.add(jMenu3);
        jMenu1.add(jSeparator2);

        quitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        quitMenuItem.setText("Quitter");
        quitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(quitMenuItem);

        jMenuBar1.add(jMenu1);

        jMenu4.setText("Ecran");

        oldScreenMenuItem.setText("Revenir Ecran de Base");
        oldScreenMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oldScreenMenuItemActionPerformed(evt);
            }
        });
        jMenu4.add(oldScreenMenuItem);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(affichagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 432, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ConsolePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(21, 21, 21))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(actionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(actionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ConsolePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(affichagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(34, 34, 34))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseDragged

    private void newMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newMenuItemActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void quitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quitMenuItemActionPerformed

    private void oldScreenMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oldScreenMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_oldScreenMenuItemActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ConsolePanel;
    private javax.swing.JPanel actionPanel;
    private javax.swing.JPanel affichagePanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JMenuItem newMenuItem;
    private javax.swing.JMenuItem oldScreenMenuItem;
    private javax.swing.JTextArea outputTextArea;
    private javax.swing.JMenuItem quitMenuItem;
    // End of variables declaration//GEN-END:variables

    
    // Methode pour creer un nouvrau graphScreen
    public void newGraphScreen(){
        if(graphScreen != null){
            affichagePanel.remove(graphScreen);
        }
        graphScreen= new GraphScreen(l,affichagePanel.getWidth(),affichagePanel.getHeight());
        oldScreen = graphScreen;
        affichagePanel.add(graphScreen);
        revalidate();
        repaint();
    }

    public void errorGraph(){
        JOptionPane.showMessageDialog(actionPanel, "Vos fichiers ne permettent pas d'afficher un graphe correct","Graphe non valide", JOptionPane.ERROR_MESSAGE);
    }
}
